//This script is made to be used with runelite and quest helper
{$I SRL/osr.simba}
{$I WaspLib/osr.simba}

begin
  Login.PlayerIndex := 0;
end;

type
  EState = (
    WAIT_STATE,
    CONTINUE_CHAT,
    CHOOSE_CHAT_OPTION
  );

  TScript = record(TBaseScript)
    State: EState;
  end;

procedure TAntiban.Setup(); override;
begin
  inherited;

  Self.Skills := [ERSSkill.TOTAL];
  Self.MinZoom := 15;
  Self.MaxZoom := 40;
end;

procedure TScript.Init(maxActions: UInt32; maxTime: UInt64); override;
begin
  'Quest Helper';

  inherited;

  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
end;


function TScript.HasChatOption: Boolean
begin
  Result := Chat.GetOptions([11710976, CHAT_COLOR_WHITE]) <> [];
end;

function TScript.ChooseChatOption: Boolean;
var
  Options: TRSChatboxOptionArray;
begin
  Options := Chat.GetOptions([11710976]);
  if Options = [] then
    Options := Chat.GetOptions([CHAT_COLOR_WHITE]);

  if Options = [] then
    Exit;

  Result := True;
  Mouse.Click(Options[0].Bounds, MOUSE_LEFT);
end;



function TScript.GetState(): EState;
begin
  if ChooseOption.IsOpen() then
    Exit(WAIT_STATE);

  if Chat.HasContinue then
    Exit(CONTINUE_CHAT);

  if Self.HasChatOption then
    Exit(CHOOSE_CHAT_OPTION);

  Exit(WAIT_STATE);
end;

procedure TScript.Run(maxActions: UInt32; maxTime: UInt64);
begin
  ClearDebug();
  Self.Init(MaxActions, MaxTime);

  repeat
    Self.State := Self.GetState();
    Self.SetAction(ToStr(Self.State));
    

    case Self.State of
      WAIT_STATE: Wait(500, 800);
      CONTINUE_CHAT: Chat.ClickContinue(True);
      CHOOSE_CHAT_OPTION: Self.ChooseChatOption;
    end;
  until False;
end;

var
  Script: TScript;

begin
  Script.Run(WLSettings.MaxActions, WLSettings.MaxTime);
end.
